//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WpfClient.MyShowsServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShowModel", Namespace="http://schemas.datacontract.org/2004/07/MyShowsParser")]
    [System.SerializableAttribute()]
    public partial class ShowModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WpfClient.MyShowsServiceReference.CountryModel CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MyShowsRatingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OriginalNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WpfClient.MyShowsServiceReference.CountryModel Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Genres {
            get {
                return this.GenresField;
            }
            set {
                if ((object.ReferenceEquals(this.GenresField, value) != true)) {
                    this.GenresField = value;
                    this.RaisePropertyChanged("Genres");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MyShowsRating {
            get {
                return this.MyShowsRatingField;
            }
            set {
                if ((object.ReferenceEquals(this.MyShowsRatingField, value) != true)) {
                    this.MyShowsRatingField = value;
                    this.RaisePropertyChanged("MyShowsRating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OriginalName {
            get {
                return this.OriginalNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginalNameField, value) != true)) {
                    this.OriginalNameField = value;
                    this.RaisePropertyChanged("OriginalName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CountryModel", Namespace="http://schemas.datacontract.org/2004/07/MyShowsParser")]
    [System.SerializableAttribute()]
    public partial class CountryModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WpfClient.MyShowsServiceReference.ShowModel[] ShowsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WpfClient.MyShowsServiceReference.ShowModel[] Shows {
            get {
                return this.ShowsField;
            }
            set {
                if ((object.ReferenceEquals(this.ShowsField, value) != true)) {
                    this.ShowsField = value;
                    this.RaisePropertyChanged("Shows");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ShowInfo", Namespace="http://schemas.datacontract.org/2004/07/MyShowsParser")]
    [System.SerializableAttribute()]
    public partial class ShowInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenresField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MyShowsRatingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OriginalNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Genres {
            get {
                return this.GenresField;
            }
            set {
                if ((object.ReferenceEquals(this.GenresField, value) != true)) {
                    this.GenresField = value;
                    this.RaisePropertyChanged("Genres");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Image {
            get {
                return this.ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageField, value) != true)) {
                    this.ImageField = value;
                    this.RaisePropertyChanged("Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MyShowsRating {
            get {
                return this.MyShowsRatingField;
            }
            set {
                if ((object.ReferenceEquals(this.MyShowsRatingField, value) != true)) {
                    this.MyShowsRatingField = value;
                    this.RaisePropertyChanged("MyShowsRating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OriginalName {
            get {
                return this.OriginalNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OriginalNameField, value) != true)) {
                    this.OriginalNameField = value;
                    this.RaisePropertyChanged("OriginalName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MyShowsServiceReference.IMyShowsService")]
    public interface IMyShowsService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyShowsService/GetShowsByCountry", ReplyAction="http://tempuri.org/IMyShowsService/GetShowsByCountryResponse")]
        WpfClient.MyShowsServiceReference.ShowModel[] GetShowsByCountry(string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyShowsService/GetShowsByCountry", ReplyAction="http://tempuri.org/IMyShowsService/GetShowsByCountryResponse")]
        System.Threading.Tasks.Task<WpfClient.MyShowsServiceReference.ShowModel[]> GetShowsByCountryAsync(string country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyShowsService/GetShowById", ReplyAction="http://tempuri.org/IMyShowsService/GetShowByIdResponse")]
        WpfClient.MyShowsServiceReference.ShowInfo GetShowById(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyShowsService/GetShowById", ReplyAction="http://tempuri.org/IMyShowsService/GetShowByIdResponse")]
        System.Threading.Tasks.Task<WpfClient.MyShowsServiceReference.ShowInfo> GetShowByIdAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyShowsService/GetShowByWord", ReplyAction="http://tempuri.org/IMyShowsService/GetShowByWordResponse")]
        WpfClient.MyShowsServiceReference.ShowInfo GetShowByWord(string word);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyShowsService/GetShowByWord", ReplyAction="http://tempuri.org/IMyShowsService/GetShowByWordResponse")]
        System.Threading.Tasks.Task<WpfClient.MyShowsServiceReference.ShowInfo> GetShowByWordAsync(string word);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMyShowsServiceChannel : WpfClient.MyShowsServiceReference.IMyShowsService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MyShowsServiceClient : System.ServiceModel.ClientBase<WpfClient.MyShowsServiceReference.IMyShowsService>, WpfClient.MyShowsServiceReference.IMyShowsService {
        
        public MyShowsServiceClient() {
        }
        
        public MyShowsServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MyShowsServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MyShowsServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MyShowsServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WpfClient.MyShowsServiceReference.ShowModel[] GetShowsByCountry(string country) {
            return base.Channel.GetShowsByCountry(country);
        }
        
        public System.Threading.Tasks.Task<WpfClient.MyShowsServiceReference.ShowModel[]> GetShowsByCountryAsync(string country) {
            return base.Channel.GetShowsByCountryAsync(country);
        }
        
        public WpfClient.MyShowsServiceReference.ShowInfo GetShowById(string id) {
            return base.Channel.GetShowById(id);
        }
        
        public System.Threading.Tasks.Task<WpfClient.MyShowsServiceReference.ShowInfo> GetShowByIdAsync(string id) {
            return base.Channel.GetShowByIdAsync(id);
        }
        
        public WpfClient.MyShowsServiceReference.ShowInfo GetShowByWord(string word) {
            return base.Channel.GetShowByWord(word);
        }
        
        public System.Threading.Tasks.Task<WpfClient.MyShowsServiceReference.ShowInfo> GetShowByWordAsync(string word) {
            return base.Channel.GetShowByWordAsync(word);
        }
    }
}
